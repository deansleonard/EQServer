# $Id: eqmsg.cfg,v 1.2 2014/11/06 23:33:22 eqadmin Exp $

# Each hash represents a Message Type as in T_MSG=<Msg Type>.  
# Each Message Type hash contains these keywords:
#
# 	help 		=	Text message displayed in response to T_MSG=HELP
# 	example		=	Additional text displayed in response to T_MSG=HELP
# 	allowremote = 	Flag indicating whether 1) or not 0) the message is allowed from
# 					a remote computer.
#	reqkeys		=	Comma-separated list of keywords required for message type.
#					Message will be rejected unless message includes all 'reqkeys' 
#					Also the 'reqkeys' are displayed in response to T_MSG=HELP
#	checkq		=	Flag indicating whether 1) or not 0) after this message 
#					is processed the queues must be checked for changes.
#	func		=	Function to invoke to process the Message Type.  
#					The function is passed one argument; a hash pointer containing all 
#					the Keyword/Value pairs parsed from the command line string. 
#					The function must return $err $msg  where '$err' indicates
#					success 0) or failure non-zero).  '$msg' is returned to the 
#					calling script user etc.
#
#	msghelp		=	Text to display when T_MSG=<msg type>;T_HELP=1 is received

[ADD]
help  = Add transaction to queue
example = t_msg=add;t_trans=doit
allowremote = 1
checkq = 1
reqkeys = T_TRANS
msghelp = Purpose: Add transaction to message queue. 
\
Description: Use this message type to add transactions to the enterprise-Q message queue for the specified target(s).  Queued transactions will not be started until receipt of a DISPATCH message for the specified target(s).  
\
Required Keywords: T_TRANS, T_TARGETS
\
Optional Keywords: T_AUTOBATCH, T_BATCHDELAY, T_BATCHID, T_BATCHMAX, T_CLASS, T_DISPATCH, T_EQUSER, T_EXCLUDEIP, T_EXPIRE, T_JOBID, T_KILL, T_MAXATTEMPTS, T_NEXTTRANS, T_PRIORITY, T_PROFILE, T_REASON, T_RECORD, T_RETRY, T_RETRYINT, T_SCHEDULE, T_SKIP, T_TARGETTYPE, T_STATUSEXEC, T_TIMELIMIT, T_TIMEOUT, T_TFILE, T_TFILEFLAG, T_UNIQUEKEYS

[ADDMREC]
help = 
example = 
allowremote = 0
checkq = 1

[ADDSREC]
help = 
example = 
allowremote = 0
checkq = 1

[ADDTREC]
help = 
example = 
allowremote = 0
checkq = 1

[ADDDREC]
help = 
example = 
allowremote = 0
checkq = 1

[CLEARQ]
help = Causes EQ to clear all queues
example = t_msg=clearq
allowremote = 0
checkq = 0
msghelp = Purpose: Clear all memory queues.  This includes the Message Queue, the Transaction Queue, and the Dispatch Queue.
\
Description: Use this message type to quickly remove all entries in all the queues.  Using T_QUICK=1 keyword allows this command to delete the contents of the queues even faster. Use this command with caution, as the queues will not be recoverable after this message is sent.

[CLEARMQ]
help = Causes EQ to clear the message queue
example = t_msg=clearmq
allowremote = 0
checkq = 0
msghelp = Purpose: Clears the message queue.  That is, the queue containing the pending transactions
\
Description: Use this message type to quickly remove all the transactions that have been queued.  Use this command with caution, as the queue will not be recoverable after this message is sent.

[CLEARSQ]
help = Causes EQ to clear the EQ Scheduler
example = t_msg=clearsq
allowremote = 0
checkq = 0

[CLEARTQ]
help = Causes EQ to clear the running transaction queue
example = t_msg=cleartq
allowremote = 0
checkq = 0
msghelp = Purpose: Clear the running transaction queue.
\
Description: Use this message type to quickly remove all entries in the running transaction queue.  
\
When the EQ Server process starts a transaction, an entry is added to the running transaction queue.  These entries are automatically removed if/when the transaction times out, or a T_MSG=FINISHED message is received with the T_TID set to the corresponding entry.  
\
This message type may be used to clear the entire running transaction queue.  Caution should be exercised when using this command, as targets assigned to the running transactions will be marked FAILED as a result of clearing this queue. Also, clearing the transaction queue does not actually stop the running transactions.


[DISPATCH]
help = Add target to dispatch queue
example = t_msg=Dispatch;t_target=node1
allowremote = 1
checkq = 1
reqkeys = 
msghelp = Purpose: Add a record to the Dispatch queue for the given Target
\
Description: Use this message type to add a record to the Dispatch queue for the given target(s).  A record is added only if there are records in the Message queue for the target(s) specified, and there's not already a record in the Dispatch queue.  That is, at most, there will only be one record in the Dispatch queue per target.  
\
Required Keywords: T_TARGET or T_TARGETS (for multiple targets) or T_TFILE (target file containing targets)
\
Optional Keywords:T_TARGETTYPE, T_EXCLUDEIP, T_EXPIRE, T_BATCHID, T_PRIORITY, T_RECORD, IP
\
	T_RECORD controls whether or not to update Dispatch transaction in RDBMS.  Zero (0) means 'No', one (1) means 'Yes'. 
	IP - IP address of target being dispatched.  Used in 'reason' field of the corresponding RDBMS record.

[DISPATCHMID]
help = Add target to dispatch queue
example = t_msg=DispatchMID;t_mid=m1m2m3...
allowremote = 1
checkq = 1
reqkeys = T_MID

[DELMREC]
help = Delete one or more messages from queue that match all '<key>=<val>' arguments.
example = t_msg=delmrec;<key>=<val>[;<key>=<val>;...]
allowremote = 0
checkq = 1
reqkeys =

[DELTREC]
help = Delete transaction from queue
example = t_msg=deltrec;t_tid=<TID>
allowremote = 0
checkq = 1
reqkeys = 

[DELDREC]
help = Delete dispatch from queue
example = t_msg=deldrec;t_did=<DID>
allowremote = 0
checkq = 1
reqkeys = 

[DUMPSPECIAL]
help = Logs contents of Special Hashes
example = t_msg=DumpSpecial
allowremote = 1
checkq = 0

[FILTERDQ]
help = Returns dispatch queue recs matching key=val[;key=val...] pairs
example = t_msg=filterdq;t_target=TARGET1
allowremote = 1
checkq = 0

[FILTERMQ]
help = Returns message queue recs matching key=val[;key=val...] pairs
example = t_msg=filtermq;t_mid=123456789000
allowremote = 1
checkq = 0

[FILTERQ]
help = Returns all queue recs matching key=val[;key=val...] pairs
example = t_msg=filterq;t_target=node1
allowremote = 1
checkq = 0

[FILTERTQ]
help = Returns running transaction queue recs matching key=val[;key=val...] pairs
example = t_msg=filtertq;t_status=$RUNNING
allowremote = 1
checkq = 0

[FINISHED]
help = For clients (running transaction process) to return status of transaction termination
example = t_msg=finished;t_tid=<TID>;t_pid=<client_PID>;t_result=0
allowremote = 0
checkq = 1
reqkeys = T_TID

[FORCESUCCESS]
help = For clients to return status of transaction termination
example = t_msg=forcesuccess;t_mid=<TID>;t_equser=user1
allowremote = 0
checkq = 1

[HELP]
help = Returns help information.
example = t_msg=help
allowremote = 1
checkq = 0

[INFO]
help = For clients to send information to be logged
example = t_msg=info
allowremote = 1
checkq = 0

[MODMREC]
help = 
example = 
allowremote = 0
checkq = 1
reqkeys = T_MID

[MODTREC]
help = 
example = 
allowremote = 0
checkq = 1
reqkeys = T_TID

[MODDREC]
help = 
example = 
allowremote = 0
checkq = 1
reqkeys = T_DID

[NEWSTATUSFILE]
help = Close current STATUS file and open new one
example = t_msg=newstatusfile
allowremote = 1
checkq = 0

[QINFOD]
help = Returns dispatch queue summary information to client
example = t_msg=qinfod
allowremote = 1
checkq = 0

[QINFOM]
help = Returns message queue summary information to client
example = t_msg=qinfom
allowremote = 1
checkq = 0

[QINFOT]
help = Returns transaction queue summary information to client
example = t_msg=qinfot
allowremote = 1
checkq = 0

[READQ]
help = Returns message transaction and dispatch queue records to client
example = t_msg=readq;t_view=details
allowremote = 1
checkq = 0

[READDQ]
help = Returns dispatch queue records to client
example = t_msg=readdq
allowremote = 1
checkq = 0

[READMQ]
help = Returns message queue records to client
example = t_msg=readmq
allowremote = 1
checkq = 0

[READTQ]
help = Returns transaction queue records to client
example = t_msg=readtq
allowremote = 1
checkq = 0

[RELOADCFG]
help = Reloads data from class.cfg and trans.cfg files
example = t_msg=reloadcfg
allowremote = 1
checkq = 0

[RESETMQINFO]
help = Reset queue summary information
example = t_msg=resetmqinfo
allowremote = 0
checkq = 0

[RESETTQINFO]
help = Reset queue summary information
example = t_msg=resettqinfo
allowremote = 0
checkq = 0

[SAVESTATUS]
help = Save status information into current STATUS file
example = t_msg=savestatus
allowremote = 0
checkq = 0

[SCHEDULE]
help = Add entry to EQ Scheduler.  Returns Schedule ID SID) upon success.
example = t_msg=schedule;t_action=FilePackage:Visio;t_time=1800;t_date=19990101;t_equser=DEMO
allowremote = 1
checkq = 0

[SETDID]
help = Valid T_DID required to set one or more values based on DID.
example = t_msg=setdid;t_did=<did>;t_tid=0
allowremote = 0
checkq = 0
reqkeys = T_DID

[SETMID]
help = Valid T_MID required to set one or more values based on MID.
example = t_msg=setmid;t_mid=<mid>;t_msgstatus=ONHOLD
allowremote = 0
checkq = 0
reqkeys = T_MID

[SETTID]
help = Valid T_TID required to set one or more values based on TID.
example = t_msg=settid;t_tid=<tid>;t_profile=newone
allowremote = 0
checkq = 0
reqkeys = T_TID

[SETPARMS]
help = Set one or more EQ Server parameters.  Changes are not save to disk and will be lost upon process termination. For permanent changes, edit the file named 'cfg/EQServer.cfg'.
example = t_msg=setparms;TRACEREQUESTS=1;TRACERESPONSES=1
allowremote = 0
checkq = 0

[SOCKINFO]
help = Display information about socket counts
example = t_msg=sockinfo
allowremote = 1
checkq = 0

[SHOWCLIENTS]
help = Return IP addresses of valid clients
example = t_msg=showclients
allowremote = 0
checkq = 0

[SHOWPARMS]
help = Return current parameter settings
example = t_msg=showparms
allowremote = 0
checkq = 0

[SHOWTRANS]
help = Return current Transaction definitions
example = t_msg=showtrans
allowremote = 0
checkq = 0

[SHOWCLASSES]
help = Return current Class definitions
example = t_msg=showclasses
allowremote = 0
checkq = 0

[STARTED]
help = For clients (running transaction process) to return status of transaction startup
example = t_msg=started;t_tid=<TID>;t_pid=<client_PID>;t_result=0
allowremote = 0
checkq = 1

[STATUS]
help = For clients (running transaction process) to return status of each transaction target
example = t_msg=status;t_tid=<TID>;t_target=<target>;t_result=0
allowremote = 0
checkq = 1

[STOP]
help = Stop the EQ Server
example = t_msg=stop;t_pass=<PASSWORD>
allowremote = 0
reqkeys = 

[STOREQ]
help = Causes EQ to store all queues to disk
example = t_msg=StoreQ
allowremote = 0
checkq = 0

[STOREDQ]
help = Causes EQ to write dispatch queue to disk
example = t_msg=StoreDQ
allowremote = 0
checkq = 0

[STOREMQ]
help = Causes EQ to write message queue to disk
example = t_msg=StoreMQ
allowremote = 0
checkq = 0

[STORETQ]
help = Causes EQ to write transaction queue to disk
example = t_msg=StoreTQ
allowremote = 0
checkq = 0

[TRANSSTATUS]
help = Used to change the state of a transaction to MONITORING
example = t_msg=transstatus;t_tid=<TID>;t_status=MONITORING
allowremote = 0
checkq = 1
